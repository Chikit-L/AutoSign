name: ScriptSync

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天凌晨运行
  workflow_dispatch: # 手动触发选项

jobs:
  update_scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install requests library
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Sync scripts
        run: |
          import os
          import requests
          import hashlib

          def download_and_save_file(local_path, remote_url):
              try:
                  response = requests.get(remote_url)
                  response.raise_for_status()
                  remote_content = response.content
                  os.makedirs(os.path.dirname(local_path), exist_ok=True)
                  with open(local_path, 'wb') as f:
                      f.write(remote_content)
                  print(f"✅ 成功下载文件到: {local_path}")
                  return True
              except Exception as e:
                  print(f"❌ 下载文件失败 {local_path}: {str(e)}")
                  return False

          def check_and_update_file(local_path, remote_url):
              try:
                  response = requests.get(remote_url)
                  response.raise_for_status()
                  remote_content = response.content
                  if not os.path.exists(local_path):
                      print(f"📥 文件不存在，开始下载: {local_path}")
                      return download_and_save_file(local_path, remote_url)

                  with open(local_path, 'rb') as f:
                      local_content = f.read()
                  
                  if hashlib.md5(local_content).hexdigest() == hashlib.md5(remote_content).hexdigest():
                      print(f"✓ 文件无需更新: {local_path}")
                      return False
                  else:
                      print(f"🔄 文件需要更新: {local_path}")
                      with open(local_path, 'wb') as f:
                          f.write(remote_content)
                      print(f"✅ 文件已更新: {local_path}")
                      return True
              except Exception as e:
                  print(f"❌ 检查更新失败 {local_path}: {str(e)}")
                  return False

          files_to_update = [
              {"local_path": "ablesci.py", "remote_url": "https://raw.githubusercontent.com/chenlunTian/ablesciSign/main/ablesci.py"},
              {"local_path": "Quark/Quark.py", "remote_url": "https://raw.githubusercontent.com/BNDou/Auto_Check_In/main/checkIn_Quark.py"},
              {"local_path": "wps.js", "remote_url": "https://raw.githubusercontent.com/wf021325/qx/refs/heads/main/task/wps.js"},
              {"local_path": "jingdong/jd_OnceApply.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/jd_OnceApply.js"},
              {"local_path": "jingdong/jd_AutoEval.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/jd_AutoEval.js"},
              {"local_path": "jingdong/jdCookie.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/jdCookie.js"},
              {"local_path": "jingdong/function/dylano.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/function/dylano.js"},
              {"local_path": "jingdong/function/dylanx.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/function/dylanx.js"},
              {"local_path": "jingdong/USER_AGENTS.js", "remote_url": "https://raw.githubusercontent.com/6dylan6/jdpro/refs/heads/main/USER_AGENTS.js"},
              {"local_path": "follow.py", "remote_url": "https://raw.githubusercontent.com/AKA-Cigma/QLscripts/refs/heads/main/follow.py"}
          ]

          updated = False
          for item in files_to_update:
              try:
                  if check_and_update_file(item['local_path'], item['remote_url']):
                      updated = True
              except Exception as e:
                  print(f"❌ 处理 {item['local_path']} 时出错: {str(e)}")

          print("Files updated:", updated)
